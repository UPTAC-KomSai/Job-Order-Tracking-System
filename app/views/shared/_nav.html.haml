/ Left Panel
%aside#left-panel.left-panel{:style => "position: fixed;"}
  %nav.navbar.navbar-expand-sm.navbar-default
    .navbar-header
      %button.navbar-toggler{"aria-controls" => "main-menu", "aria-expanded" => "false", "aria-label" => "Toggle navigation", "data-target" => "#main-menu", "data-toggle" => "collapse", :type => "button"}
        %i.fa.fa-bars
      / %a.navbar-brand{:href => job_orders_path}
      /   %img{:alt => "Logo", :src => "/images/worker.png"}
      /   %p{:style=>"text-align: center;"}=User.find(session['user_credentials_id']).position
      = link_to(job_order_tracking_system_path, method: :get, :class=>"navbar-brand") do
        %img{:alt => "Logo", :src => "/images/worker.png", :width => "180px", :height => "180px"}
        %p{:style=>"text-align: center;"}=User.find(session['user_credentials_id']).position
    #main-menu.main-menu.collapse.navbar-collapse
      %ul.nav.navbar-nav
        %li.active
          = link_to(job_order_tracking_system_path, method: :get) do
            %i.menu-icon.fa.fa-dashboard>
            Dashboard
        -@user = User.find(session['user_credentials_id'])
        -if @user.has_role? :Administrator
          %li.active
            = link_to(offices_path, method: :get) do
              %i.menu-icon.fa.fa-hospital-o
              Offices
          %li.active
            = link_to(users_path(:type => 'active'), method: :get) do
              %i.menu-icon.fa.fa-check
              Active Accounts
          %li.active
            = link_to(users_path(:type => 'inactive'), method: :get) do
              %i.menu-icon.fa.fa-ban
              Inactive Accounts
        -else
          -if @user.has_role? :Faculty or (Office.find(@user.office_id).name == "Supervising Administrative Office" and @user.has_role? :Office_Head)
            %li.active
              = link_to(job_orders_path(:type => 'unapproved'), method: :get) do
                %i.menu-icon.fa.fa-thumbs-down
                Unapproved Job Orders
          -elsif @user.has_role? :Standard_User
            %li.active
              = link_to(new_job_order_path, method: :get) do
                %i.menu-icon.fa.fa-edit
                Request Job Order
          -elsif @user.has_role? :Office_Head
            %li.active
              = link_to(job_orders_path(:type => 'unassigned'), method: :get) do
                %i.menu-icon.fa.fa-calendar-o
                Unassigned Job Order
          %li.active
            = link_to(job_orders_path(:type => 'pending'), method: :get) do
              %i.menu-icon.fa.fa-bolt
              Pending Job Orders
          %li.active
            = link_to(job_orders_path(:type => 'ongoing'), method: :get) do
              %i.menu-icon.fa.fa-toggle-right
              Ongoing Job Orders
          %li.active
            = link_to(job_orders_path(:type => 'finished'), method: :get) do
              %i.menu-icon.fa.fa-check-square
              Finished Job Orders
          %li.active
            = link_to(job_orders_path(:type => 'rejected'), method: :get) do
              %i.menu-icon.fa.fa-minus-square
              Rejected Job Orders
          -if @user.has_role? :Faculty or @user.has_role? :Standard_User or (Office.find(@user.office_id).name == "Supervising Administrative Office" and @user.has_role? :Office_Head)
            %li.active
              = link_to(job_orders_path(:type => 'trash'), method: :get) do
                %i.menu-icon.fa.fa-trash-o
                Trash

#right-panel.right-panel{:style => "position: fixed; width: 80%; z-index: 3; left: 280px;"}
  %header#header.header
    .header-menu
      .col-sm-7
        .header-left
        %h5.pb-2.display-5 Job Order Tracking System
      .col-sm-5
        .user-area.float-right
          .row
            -@current_user = User.find(session['user_credentials_id'])
            .dropdown{"data-behavior" => "notifications"}
              = link_to nil, class: 'dropdown-toggle nav-link', type: :button, aria:{ expanded: false, haspopup: true}, data: { behavior: "notifications-link",  toggle: :dropdown} do
                %i.fa.fa-bell
                %span{"data-behavior" => "unread-count"}
              .dropdown-menu.dropdown-menu-right{"aria-labelledby" => "dropdownMenuButton", "data-behavior" => "notification-items"}
            .float-right{:style => "padding-top: 7px; padding-bottom: 15px; padding-right: 15px;"}
              = link_to(user_path(@current_user), method: :get) do
                %i.fa.fa-user
                = @current_user.fname
              = link_to(root_path, method: :get) do
                %i.fa.fa-sign-out
                Logout
